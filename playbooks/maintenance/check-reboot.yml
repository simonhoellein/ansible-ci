---
- name: Check pending reboots on Ubuntu hosts
  hosts: all
  gather_facts: no
  become: yes

  vars:
    reboot_flag_file: /var/run/reboot-required

  tasks:
    - name: Check if reboot is required (Ubuntu)
      stat:
        path: "{{ reboot_flag_file }}"
      register: reboot_flag

    - name: Set per-host reboot status
      set_fact:
        reboot_required: "{{ reboot_flag.stat.exists | default(false) }}"

    - name: Build table rows per host
      set_fact:
        reboot_table_rows: >-
          {{
            (reboot_table_rows | default([]))
            + [ { 'Host': inventory_hostname, 'RebootRequired': reboot_required | ternary('Yes', 'No') } ]
          }}

    - name: Prepare Markdown table header and rows on controller
      run_once: true
      delegate_to: localhost
      vars:
        header: "| Host | Reboot Required |"
        sep:    "|------|-----------------|"
        rows: >-
          {{
            play_hosts
            | map('extract', hostvars)
            | map('extract', 'reboot_required')
            | list
          }}
        # Build a sorted list of hosts with their status from hostvars
        table_lines: >-
          {{
            play_hosts
            | map('extract', hostvars)
            | list
            | map('combine', [{'name': item.key}] )
          }}
      debug:
        msg: >-
          {{ header }}
          {{ sep }}
          {%- for h in play_hosts | sort %}
          | {{ h }} | {{ (hostvars[h].reboot_required | default(false)) | ternary('Yes','No') }} |
          {%- endfor %}

    - name: Print summary filtered to only hosts that require reboot (optional)
      run_once: true
      delegate_to: localhost
      debug:
        msg: >-
          The following table lists all hosts. "Yes" means a reboot is required.
          Only "Yes" rows indicate action needed.
