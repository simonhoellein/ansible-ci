---
- name: Check pending reboots
  hosts: all
  gather_facts: no
  become: yes

  vars:
    reboot_flag_file: /var/run/reboot-required

  tasks:
    - name: Verify reboot-required flag file presence
      stat:
        path: "{{ reboot_flag_file }}"
      register: reboot_flag

    - name: Set per-host reboot status fact
      set_fact:
        reboot_required: "{{ reboot_flag.stat.exists | default(false) }}"

    - name: Show per-host status (optional verbose)
      debug:
        msg: "Reboot required: {{ reboot_required }}"
      when: reboot_required is defined

    - name: Aggregate hosts requiring reboot
      set_fact:
        hosts_requiring_reboot: >-
          {{
            (hosts_requiring_reboot | default([]))
            + ([inventory_hostname] if reboot_required else [])
          }}

    - name: Print summary on one controller host
      run_once: true
      delegate_to: localhost
      vars:
        # Build a list of hosts from the play's hosts that set reboot_required = true
        needing_reboot: >-
          {{
            groups[play_hosts[0] | default(inventory_hostname)]
            if false else
            (
              hostvars
              | dict2items
              | selectattr('value.reboot_required', 'defined')
              | selectattr('value.reboot_required', 'equalto', true)
              | map(attribute='key')
              | list
            )
          }}
      debug:
        msg: >-
          SUMMARY: The following hosts require reboot:
          {{ (needing_reboot | length > 0)
              | ternary(needing_reboot | join(', '), 'None') }}
